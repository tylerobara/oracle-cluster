app-template:
  controllers:
    bytestash:
      strategy: Recreate
      containers:
        main:
          image:
            repository: ghcr.io/jordan-dalby/bytestash
            tag: 1.5.9
            pullPolicy: IfNotPresent
          env:
            # e.g. write /bytestash for a domain such as my.domain/bytestash, leave blank in every other case
            BASE_PATH: ""
            # Either provide JWT_SECRET directly or use JWT_SECRET_FILE for Docker secrets
            #- JWT_SECRET_FILE=/run/secrets/jwt
            JWT_SECRET:
              valueFrom:
                secretKeyRef:
                  name: bytestash-secret
                  key: jwt_secret
            # how long the token lasts, examples: "2 days", "10h", "7d", "1m", "60s"
            TOKEN_EXPIRY: 24h
            # is this bytestash instance open to new accounts being created?
            ALLOW_NEW_ACCOUNTS: false
            # Should debug mode be enabled? Essentially enables logging, in most cases leave this as false
            DEBUG: true
            # Should we use accounts at all? When enabled, it will be like starting a fresh account so export your snippets, no login required
            DISABLE_ACCOUNTS: false
            # Should internal accounts be disabled?
            DISABLE_INTERNAL_ACCOUNTS: true
            # Allow password changes (false by default)
            ALLOW_PASSWORD_CHANGES: true
            # Optional: Enable OIDC for Single Sign On
            OIDC_ENABLED: true
            # Optional: Display name for users signing in with SSO, will default to Single Sign-on
            OIDC_DISPLAY_NAME: "Keycloak"
            # Your OIDC issuer url, e.g. https://authentik.mydomain.com/application/o/bytestash/ for authentik
            OIDC_ISSUER_URL:
              valueFrom:
                secretKeyRef:
                  name: bytestash-secret
                  key: issuer_url
            # Your OIDC client ID, you can find it in your app provider
            OIDC_CLIENT_ID:
              valueFrom:
                secretKeyRef:
                  name: bytestash-secret
                  key: client_id
            # Your OIDC client secret, again, found in the app provider
            OIDC_CLIENT_SECRET:
              valueFrom:
                secretKeyRef:
                  name: bytestash-secret
                  key: client_secret
            # The OIDC scopes to request, e.g. "openid profile email groups"
            OIDC_SCOPES: "openid profile email groups"

  service:
    bytestash:
      controller: bytestash
      ports:
        http:
          port: 5000

  ingress:
    bytestash:
      annotations: 
        kubernetes.io/ingress.class: traefik
        gethomepage.dev/href: "https://stash.cloud.obara.xyz"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "bytestash"
        gethomepage.dev/description: "Code Sharing"
        gethomepage.dev/group: "Development"
        gethomepage.dev/icon: "sh-bytestash.svg"
      className: "traefik"
      hosts:
        - host: stash.cloud.obara.xyz
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: bytestash
                port: http

  persistence:
    data:
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      globalMounts:
        - path: /data/snippets

externalSecrets:
  secretStoreRef:
    name: bao-backend
    kind: ClusterSecretStore
  target:
    name: bytestash-secrets
  data:
  - secretKey: string
    remoteRef:
      key: bytestash
      property: string